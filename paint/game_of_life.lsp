(ql:quickload "lispbuilder-sdl")

(defun empty (list) (= (length list) 0))

(defvar d 20)
(defvar i 0)
(defvar b 0)
(defvar xmax 2000)
(defvar ymax 1500)

(defun get-item (list index)
  (if (empty list)
	()
	(if (= 0 index)
	  (first list)
	  (get-item (rest list) (- index 1)))))

(defun coord-case (n d)
  (+ (* (floor n d) d) 1))

(defun kill-dot (d x y)
  (sdl:draw-box (sdl:rectangle :x (coord-case x d) :y (coord-case y d) :w (- d 1) :h (- d 1))
				:color sdl:*black*))

(defun draw-dot (d x y)
  (sdl:draw-box (sdl:rectangle :x (coord-case x d) :y (coord-case y d) :w (- d 1) :h (- d 1))
				:color sdl:*red*))

(defun vertical (x y k b)
  (loop for i from 0 to y by k
   	do (sdl:draw-line-* 0 (+ i b) x (+ i b)))
  (loop for i from 0 to x by k
   	do (sdl:draw-line-* i y i b)))

(defun init-grid (x y k b)
  (loop for i from 0 to y by k
   	do (sdl:draw-line-* b i x i))
  (loop for i from 0 to x by k
   	do (sdl:draw-line-* (+ i b) y (+ i b) 0)))


(defun init-window (x y k name)
  (sdl:with-init ()
      (sdl:window (+ x 1) (+ y 1) :title-caption name)
      (setf (sdl:frame-rate) 60)
      (sdl:clear-display sdl:*black*)
	  (init-grid x y k 0)
      (sdl:update-display)
	  (sdl:disable-key-repeat)
	  (sdl:initialise-default-font)
	  (sdl:enable-unicode)
	  (sdl:unicode-enabled-p)
      (sdl:with-events ()
	    (:quit-event () t)
		(:key-down-event ())
		(:mouse-motion-event ())
		(:mouse-button-up-event (sdl:mouse-wheel-up-p))
		(:mouse-button-down-event (sdl:mouse-wheel-down-p))
  		(:idle ()
		 (when (sdl:key-state-p :sdl-key-q)
		   (if (<= b x)
			 (setq b (+ b 5)))
		   (sdl:clear-display sdl:*black*)
		   (init-grid xmax ymax k b))
		 (when (sdl:key-state-p :sdl-key-d)
		   (if (>= b (- 0 x))
			 (setq b (- b 5)))
		   (sdl:clear-display sdl:*black*)
		   (init-grid x y k b))
		 (when (sdl:key-state-p :sdl-key-z)
		   (if (>= b (- 0 y))
			 (setq b (- b 5)))
		   (sdl:clear-display sdl:*black*)
		   (vertical x y k b))
		 (when (sdl:key-state-p :sdl-key-s)
		   (if (<= b x)
			 (setq b (+ b 5)))
		   (sdl:clear-display sdl:*black*)
		   (vertical x y k b))
		 (when (sdl:key-state-p :sdl-key-kp-plus)
		   (if (<= k 200)
		     (setq k (+ k 5)))
      	   (sdl:clear-display sdl:*black*)
		   (init-grid x y k b))
		 (when (sdl:mouse-wheel-up-p)
		   (print "OK")
		   (if (<= k 200)
		     (setq k (+ k 5)))
      	   (sdl:clear-display sdl:*black*)
		   (init-grid x y k b))
		 (when (sdl:key-state-p :sdl-key-kp-minus)
		   (if (>= k 15)
		   	 (setq k (- k 5)))
      	   (sdl:clear-display sdl:*black*)
		   (init-grid x y k b))
		 (when (sdl:mouse-wheel-down-p)
		   (print "Bonjour")
		   (if (>= k 15)
		   	 (setq k (- k 5)))
      	   (sdl:clear-display sdl:*black*)
		   (init-grid x y k b))
		 (when (sdl:mouse-left-p)
		   (draw-dot k (sdl:mouse-x) (sdl:mouse-y)))
		 (sdl:update-display)))))

(defun main (argv)
  (if (= (length argv) 4)
	(init-window (parse-integer (get-item argv 1) :junk-allowed t)
				 (parse-integer (get-item argv 2) :junk-allowed t)
				 d
				 (get-item argv 3))))

(sb-int:with-float-traps-masked (:invalid :inexact :overflow) (main *posix-argv*))
